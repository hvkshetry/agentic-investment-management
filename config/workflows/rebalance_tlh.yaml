# Tax-Loss Harvesting with Rebalancing Workflow
# Coordinates sub-agents for portfolio optimization with tax efficiency

workflow: rebalance_tlh
description: Portfolio rebalancing with tax-loss harvesting optimization
schedule: ad_hoc  # Can be: ad_hoc, daily, weekly, monthly
guidelines:
  target_tokens: 100000  # Aim for ~30-40 pages of analysis

# Sub-agent execution sequence
sub_agents_sequence:
  - id: portfolio_import
    name: portfolio-manager
    task: |
      Import portfolio data from CSV files:
      1. Read Vanguard CSV from /mnt/c/Users/hvksh/investing/portfolio/vanguard.csv
      2. Import using mcp__portfolio-state-server__import_broker_csv with broker="vanguard"
      3. Read UBS CSV from /mnt/c/Users/hvksh/investing/portfolio/ubs.csv
      4. Import using mcp__portfolio-state-server__import_broker_csv with broker="ubs"
      Note: Portfolio state server starts empty on each initialization.
    outputs: [import_confirmation]
    required_tools: [Read, mcp__portfolio-state-server__import_broker_csv]
    acceptance:
      must_complete: [vanguard_import, ubs_import]
      
  - id: portfolio_snapshot
    name: portfolio-manager
    task: |
      Get current portfolio state from mcp__portfolio-state-server__get_portfolio_state
      after imports are complete. Create portfolio_snapshot.json in the session 
      directory with current holdings, valuations, and tax lots.
    outputs: [portfolio_snapshot]
    depends_on: [portfolio_import]
    required_tools: [mcp__portfolio-state-server__get_portfolio_state]
    acceptance:
      must_have_fields: [positions, tax_lots, asset_allocation, total_value]
      
  - id: macro_context
    name: macro-analyst
    task: |
      Analyze current macro environment including yield curve, economic indicators,
      and policy events. Read portfolio_snapshot.json from session directory.
      Create macro_context.json with regime assessment.
    outputs: [macro_context]
    required_tools: [mcp__openbb-curated__economy_gdp_real, mcp__openbb-curated__economy_cpi]
    acceptance:
      must_have_fields: [yield_curve, economic_regime, rate_outlook]
      
  - id: equity_analysis
    name: equity-analyst
    task: |
      Analyze equity holdings from portfolio_snapshot.json. Assess valuations,
      identify overvalued/undervalued positions, and recommend actions.
      Create equity_analysis.json with specific trim/add recommendations.
    outputs: [equity_analysis]
    depends_on: [portfolio_snapshot, macro_context]
    acceptance:
      must_have_fields: [overvalued_positions, undervalued_positions, recommendations]
      
  - id: fixed_income_analysis
    name: fixed-income-analyst
    task: |
      Analyze bond holdings and duration positioning. Read portfolio_snapshot.json
      and macro_context.json. Create fixed_income_analysis.json with duration
      and credit recommendations.
    outputs: [fixed_income_analysis]
    depends_on: [portfolio_snapshot, macro_context]
    acceptance:
      must_have_fields: [duration_analysis, yield_analysis, recommendations]
      
  - id: optimization_candidates
    name: portfolio-manager
    task: |
      Generate 2+ optimization candidates using different methods (MaxSharpe, HRP).
      Read all prior analyses from session directory. Use ONLY tickers from
      portfolio_snapshot. Create optimization_candidate_1.json and
      optimization_candidate_2.json with expected metrics.
    outputs: [optimization_candidate_1, optimization_candidate_2]
    depends_on: [portfolio_snapshot, macro_context, equity_analysis, fixed_income_analysis]
    acceptance:
      must_have_fields: [method, allocations, expected_return, expected_volatility, sharpe_ratio]
      invariants:
        - name: holdings_only
          check: "all tickers in allocations exist in portfolio_snapshot"
        - name: allocation_sum
          check: "sum of allocations equals 1.0 (Â±0.01)"
          
  - id: risk_validation
    name: risk-analyst
    task: |
      Validate risk metrics for each optimization candidate. Calculate Expected Shortfall (ES)
      at 97.5% confidence as PRIMARY metric, VaR as reference only. Check ETF lookthrough
      concentration. Create risk_report_1.json and risk_report_2.json for each candidate.
      HALT if ES > 2.5% at 97.5% confidence.
    outputs: [risk_report_1, risk_report_2]
    depends_on: [optimization_candidate_1, optimization_candidate_2]
    gates: [es_gate_pre, risk_gate_pre]
    acceptance:
      must_have_fields: [es_975, var_95, etf_lookthrough_concentration, max_drawdown, sharpe_ratio, stress_tests]
      
  - id: tax_analysis
    name: tax-advisor
    task: |
      Analyze tax implications of each optimization candidate. Identify harvesting
      opportunities, calculate tax drag, check wash sale risks. Create
      tax_impact_1.json and tax_impact_2.json.
    outputs: [tax_impact_1, tax_impact_2]
    depends_on: [optimization_candidate_1, optimization_candidate_2, portfolio_snapshot]
    gates: [tax_gate]
    acceptance:
      must_have_fields: [total_tax, stcg, ltcg, harvesting_opportunities, wash_sale_risk]
      
  - id: final_selection
    name: portfolio-manager
    task: |
      Select best optimization candidate based on risk and tax analyses.
      Create final trade_list.json with specific buy/sell orders and rationale.
      Include decision_memo.json explaining selection. Ensure ES < 2.5% at 97.5% confidence.
    outputs: [trade_list, decision_memo]
    depends_on: [risk_report_1, risk_report_2, tax_impact_1, tax_impact_2]
    gates: [es_gate, risk_gate, tax_gate, compliance_gate, realism_gate]
    acceptance:
      must_have_fields: [trades, rationale, expected_improvement, es_compliant]
      
  - id: round2_validation
    name: gate-validator
    task: |
      MANDATORY Round-2 gate validation for final selected allocation.
      Verify ES < 2.5%, tax reconciliation consistency, liquidity > 0.3.
      Create lineage record tracking revision. Generate round2_validation.json.
      HALT if any validation fails.
    outputs: [round2_validation]
    depends_on: [final_selection]
    gates: [round2_gate]
    acceptance:
      must_have_fields: [es_check, tax_consistency, liquidity_check, lineage_record, halt_status]

# Gate definitions (reference config/policy/*.yaml for limits)
gates:
  es_gate_pre:
    description: ES-primary pre-trade validation
    checks:
      - es_975 <= 0.025  # 2.5% Expected Shortfall limit at 97.5% confidence
      - es_var_ratio >= 1.0 AND <= 2.0  # ES/VaR ratio validation
      - etf_lookthrough_concentration <= 0.20  # Single-name concentration with lookthrough
      
  risk_gate_pre:
    description: Pre-trade risk validation (reference only)
    checks:
      - var_95 <= max_daily_var_95  # Reference only, not binding
      - sharpe_ratio >= min_sharpe
      - max_position_weight <= max_single_position  # Exempt broad market ETFs
      
  es_gate:
    description: ES-primary post-trade validation (BINDING)
    checks:
      - es_975 <= 0.025  # HALT if exceeded
      - liquidity_score >= 0.3  # HALT if below
      - concentration_compliant == true  # With ETF lookthrough
      
  risk_gate:
    description: Post-trade risk validation (reference)
    checks:
      - expected_var <= current_var OR improvement_justified  # Reference only
      - stress_test_losses <= max_stress_loss
      
  tax_gate:
    description: Tax efficiency validation
    checks:
      - tax_drag <= max_tax_drag
      - wash_sale_violations == 0
      - harvest_losses_before_gains == true
      
  compliance_gate:
    description: Regulatory compliance
    checks:
      - no_restricted_securities
      - no_pattern_day_trading
      - account_minimums_met
      
  realism_gate:
    description: Statistical plausibility
    checks:
      - no_single_position > 0.20  # Increased for broad market ETFs
      - position_count >= 15  # Reduced minimum
      - expected_sharpe <= 3.0  # Reject impossible Sharpes
      
  round2_gate:
    description: MANDATORY Round-2 validation for all revisions
    checks:
      - es_975 <= 0.025  # ES limit (BINDING)
      - tax_reconciliation_complete == true
      - lineage_record_exists == true
      - wash_sale_check_passed == true
      - halt_not_active == true  # Cannot proceed if HALT active
      
  credibility_gate:
    description: Multi-source validation
    checks:
      - policy_catalysts_sources >= 2
      - news_corroboration >= 2

# Reporting
reporting:
  generate_ic_memo: true
  include_gate_results: true
  distribution_list: [user]